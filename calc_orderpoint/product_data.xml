<?xml version="1.0" encoding="utf-8"?>
<openerp>
  <data noupdate="1">
<!--
    <record model="ir.actions.server" id="product_instock_percent">
      <field name="name">Calc Instock Percent</field>
      <field name="state">code</field>
      <field name="condition" eval="True" />
      <field name="model_id" ref="product.model_product_product" />
      <field name="code">
obj = object.browse(context.get('active_ids', []))
for o in obj:
    o._consumption_per_day()
      </field>
    </record>
    <record model="ir.values" id="product_instock_percent_action_menu">
      <field name="name">Calc Instock Percent</field>
      <field name="model">product.product</field>
      <field name="model_id" ref="product.model_product_product" />
      <field name="key2">client_action_multi</field>
      <field name="value" eval="'ir.actions.server,%d' % product_instock_percent" />
    </record>
-->
<!--
    <record model="ir.actions.server" id="product_instock_percent">
      <field name="menu_ir_values_id" ref="product_instock_percent_action_menu" />
    </record>
-->
    <record model="ir.cron" id="cron_compute_fields">
      <field name="name">Compute Product Consumption Fields</field>
      <field name="user_id" ref="base.user_root"/>
      <field name="interval_number">1</field>
      <field name="interval_type">days</field>
      <field name="doall" eval="True"/>

<!--
      <field name="nextcall" eval="(datetime.now() + timedelta(hours=12)).strftime('%Y-%m-%d %H:%M:%S')"/>
-->

      <field name="numbercall">-1</field>
      <field name="model">product.template</field>
      <field name="function">compute_consumption_per_day</field>
    </record>


    <record id="action_clear_cache_moves" model="ir.actions.server">
      <field name="name">Clear cache for moves</field>
      <field name="model_id" ref="base.model_ir_actions_server"/>
      <field name="code">time = (datetime.datetime.now() - datetime.timedelta(days=1)).strftime('%Y-%m-%d %H:%M')
wh = env.ref('stock.warehouse0')
internal = env['stock.picking.type'].search([('code','=','internal'), ('warehouse_id', '=', wh.id)])

for product in env['stock.move'].search([('picking_type_id', '=', internal.id), ('date', '>', time)]).mapped('quant_ids.product_id'):
   product.calc_orderpoint()
     </field>
    </record>

    <record id="action_clear_cache_production" model="ir.actions.server">
      <field name="name">Clear cache production</field>
      <field name="model_id" ref="mrp.model_mrp_production"/>
      <field name="code">for move in object.move_created_ids2:
   move.product_id.calc_orderpoint()
     </field>
    </record>

    <record id="action_clear_cache_picking" model="ir.actions.server">
      <field name="name">Clear cache picking</field>
      <field name="model_id" ref="stock.model_stock_picking"/>
      <field name="code">for move in object.move_lines:
   move.product_id.calc_orderpoint()
     </field>
    </record>


  </data>
</openerp>
